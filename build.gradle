plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.skala03'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}


// Spring AI 관련 설정 주석 처리
// ext {
//     set('springAiVersion', "1.0.0")
// }

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	//implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-actuator' // 헬스체크를 위해 추가

	// Spring AI 관련 의존성 주석 처리 (이미 주석 처리되어 있음)
	// implementation 'org.springframework.ai:spring-ai-starter-model-openai'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	// Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

	// Validation 추가
	implementation 'org.springframework.boot:spring-boot-starter-validation'
}



tasks.named('test') {
	useJUnitPlatform()
}

// Docker 이미지 빌드를 위한 bootJar 태스크 설정
bootJar {
	archiveFileName = 'app.jar'
	enabled = true
}

jar {
	enabled = false
}

// 애플리케이션 실행 시 프로파일 설정
bootRun {
	if (project.hasProperty('args')) {
		args project.args.split(',')
	}
}
